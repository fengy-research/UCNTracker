# Makefile.in generated by automake 1.9.6 from Makefile.am.
# ucntracker/core/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/ucntracker
pkglibdir = $(libdir)/ucntracker
pkgincludedir = $(includedir)/ucntracker
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-redhat-linux-gnu
host_triplet = i686-redhat-linux-gnu
subdir = ucntracker/core
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/autotools/dolt.m4 \
	$(top_srcdir)/autotools/vala.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libcore_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__objects_1 = libcore_la-types.lo libcore_la-vector.lo \
	libcore_la-surface.lo libcore_la-volume.lo \
	libcore_la-volume-simple.lo libcore_la-volume-ball.lo \
	libcore_la-volume-box.lo libcore_la-volume-cylinder.lo \
	libcore_la-curve.lo libcore_la-experiment.lo \
	libcore_la-intersection.lo libcore_la-part.lo \
	libcore_la-ptype.lo libcore_la-run.lo libcore_la-track.lo \
	libcore_la-vertex.lo libcore_la-core.lo
am__objects_2 =
am_libcore_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libcore_la_OBJECTS = $(am_libcore_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libcore_la_SOURCES)
DIST_SOURCES = $(libcore_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/fengyu/Projects/UCNTracker/autotools/missing --run aclocal-1.9
ACLOCAL_AMFLAGS = -I autotools
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/fengyu/Projects/UCNTracker/autotools/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/fengyu/Projects/UCNTracker/autotools/missing --run autoconf
AUTOHEADER = ${SHELL} /home/fengyu/Projects/UCNTracker/autotools/missing --run autoheader
AUTOMAKE = ${SHELL} /home/fengyu/Projects/UCNTracker/autotools/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOLT_BASH = /bin/bash
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = f95
FFLAGS = -g -O2
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_LIBS = -Wl,--export-dynamic -L/lib -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
GSL_CFLAGS =  
GSL_LIBS = -lgsl -lgslcblas -lm  
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(top_builddir)/doltlibtool
LN_S = ln -s
LTCOMPILE = $(top_builddir)/doltcompile $(COMPILE)
LTCXXCOMPILE = $(top_builddir)/doltcompile $(CXXCOMPILE)
LTLIBOBJS = 
MAINT = 
MAINTAINER_MODE_FALSE = #
MAINTAINER_MODE_TRUE = 
MAKEINFO = ${SHELL} /home/fengyu/Projects/UCNTracker/autotools/missing --run makeinfo
OBJEXT = o
PACKAGE = ucntracker
PACKAGE_BUGREPORT = fengy@indiana.edu
PACKAGE_NAME = UCNTracker
PACKAGE_STRING = UCNTracker 0.0
PACKAGE_TARNAME = ucntracker
PACKAGE_VERSION = 0.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VALAC = /usr/bin/valac
VALA_CCODE_RULES = vala-ccode: $(VALASOURCES); $(VALAC) $(VALAFLAGS) -C $^ $(VALAPKGS) && touch vala-ccode
VALA_OBJECT_RULES = vala-object: $(VALASOURCES); $(VALAC) $(VALAFLAGS) -c $^ $(VALAPKGS) && touch vala-object
VERSION = 0.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f95
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_pt_PKG_CONFIG = /usr/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-redhat-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = redhat
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-redhat-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = redhat
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/fengyu/Projects/UCNTracker/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
noinst_LTLIBRARIES = libcore.la
libcore_la_LIBADD = $(GLIB_LIBS) $(GSL_LIBS)
libcore_la_CPPFLAGS = $(GLIB_CFLAGS) $(GSL_CFLAGS)  -I$(top_srcdir) -I$(top_srcdir)/ucntracker -DG_LOG_DOMAIN=\"UCNTracker\" -DINFO=
libcore_la_SOURCES = \
	$(VALASOURCES:.vala=.c)	\
	$(VALASOURCES:.vala=.h)

VALASOURCES = \
	types.vala \
	vector.vala \
	surface.vala \
	volume.vala \
	volume-simple.vala \
	volume-ball.vala \
	volume-box.vala \
	volume-cylinder.vala \
	curve.vala \
	experiment.vala \
	intersection.vala \
	part.vala \
	ptype.vala \
	run.vala \
	track.vala \
	vertex.vala \
	core.vala 

BUILT_SOURCES = vala-ccode
VALAFLAGS = --library=core --basedir=$(top_srcdir)
VALAPKGS = ../builder/builder.vapi --pkg gsl --pkg gmodule-2.0
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  ucntracker/core/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  ucntracker/core/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcore.la: $(libcore_la_OBJECTS) $(libcore_la_DEPENDENCIES) 
	$(LINK)  $(libcore_la_LDFLAGS) $(libcore_la_OBJECTS) $(libcore_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcore_la-core.Plo
include ./$(DEPDIR)/libcore_la-curve.Plo
include ./$(DEPDIR)/libcore_la-experiment.Plo
include ./$(DEPDIR)/libcore_la-intersection.Plo
include ./$(DEPDIR)/libcore_la-part.Plo
include ./$(DEPDIR)/libcore_la-ptype.Plo
include ./$(DEPDIR)/libcore_la-run.Plo
include ./$(DEPDIR)/libcore_la-surface.Plo
include ./$(DEPDIR)/libcore_la-track.Plo
include ./$(DEPDIR)/libcore_la-types.Plo
include ./$(DEPDIR)/libcore_la-vector.Plo
include ./$(DEPDIR)/libcore_la-vertex.Plo
include ./$(DEPDIR)/libcore_la-volume-ball.Plo
include ./$(DEPDIR)/libcore_la-volume-box.Plo
include ./$(DEPDIR)/libcore_la-volume-cylinder.Plo
include ./$(DEPDIR)/libcore_la-volume-simple.Plo
include ./$(DEPDIR)/libcore_la-volume.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libcore_la-types.lo: types.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-types.lo -MD -MP -MF "$(DEPDIR)/libcore_la-types.Tpo" -c -o libcore_la-types.lo `test -f 'types.c' || echo '$(srcdir)/'`types.c; \
	then mv -f "$(DEPDIR)/libcore_la-types.Tpo" "$(DEPDIR)/libcore_la-types.Plo"; else rm -f "$(DEPDIR)/libcore_la-types.Tpo"; exit 1; fi
#	source='types.c' object='libcore_la-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-types.lo `test -f 'types.c' || echo '$(srcdir)/'`types.c

libcore_la-vector.lo: vector.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-vector.lo -MD -MP -MF "$(DEPDIR)/libcore_la-vector.Tpo" -c -o libcore_la-vector.lo `test -f 'vector.c' || echo '$(srcdir)/'`vector.c; \
	then mv -f "$(DEPDIR)/libcore_la-vector.Tpo" "$(DEPDIR)/libcore_la-vector.Plo"; else rm -f "$(DEPDIR)/libcore_la-vector.Tpo"; exit 1; fi
#	source='vector.c' object='libcore_la-vector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-vector.lo `test -f 'vector.c' || echo '$(srcdir)/'`vector.c

libcore_la-surface.lo: surface.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-surface.lo -MD -MP -MF "$(DEPDIR)/libcore_la-surface.Tpo" -c -o libcore_la-surface.lo `test -f 'surface.c' || echo '$(srcdir)/'`surface.c; \
	then mv -f "$(DEPDIR)/libcore_la-surface.Tpo" "$(DEPDIR)/libcore_la-surface.Plo"; else rm -f "$(DEPDIR)/libcore_la-surface.Tpo"; exit 1; fi
#	source='surface.c' object='libcore_la-surface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-surface.lo `test -f 'surface.c' || echo '$(srcdir)/'`surface.c

libcore_la-volume.lo: volume.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-volume.lo -MD -MP -MF "$(DEPDIR)/libcore_la-volume.Tpo" -c -o libcore_la-volume.lo `test -f 'volume.c' || echo '$(srcdir)/'`volume.c; \
	then mv -f "$(DEPDIR)/libcore_la-volume.Tpo" "$(DEPDIR)/libcore_la-volume.Plo"; else rm -f "$(DEPDIR)/libcore_la-volume.Tpo"; exit 1; fi
#	source='volume.c' object='libcore_la-volume.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-volume.lo `test -f 'volume.c' || echo '$(srcdir)/'`volume.c

libcore_la-volume-simple.lo: volume-simple.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-volume-simple.lo -MD -MP -MF "$(DEPDIR)/libcore_la-volume-simple.Tpo" -c -o libcore_la-volume-simple.lo `test -f 'volume-simple.c' || echo '$(srcdir)/'`volume-simple.c; \
	then mv -f "$(DEPDIR)/libcore_la-volume-simple.Tpo" "$(DEPDIR)/libcore_la-volume-simple.Plo"; else rm -f "$(DEPDIR)/libcore_la-volume-simple.Tpo"; exit 1; fi
#	source='volume-simple.c' object='libcore_la-volume-simple.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-volume-simple.lo `test -f 'volume-simple.c' || echo '$(srcdir)/'`volume-simple.c

libcore_la-volume-ball.lo: volume-ball.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-volume-ball.lo -MD -MP -MF "$(DEPDIR)/libcore_la-volume-ball.Tpo" -c -o libcore_la-volume-ball.lo `test -f 'volume-ball.c' || echo '$(srcdir)/'`volume-ball.c; \
	then mv -f "$(DEPDIR)/libcore_la-volume-ball.Tpo" "$(DEPDIR)/libcore_la-volume-ball.Plo"; else rm -f "$(DEPDIR)/libcore_la-volume-ball.Tpo"; exit 1; fi
#	source='volume-ball.c' object='libcore_la-volume-ball.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-volume-ball.lo `test -f 'volume-ball.c' || echo '$(srcdir)/'`volume-ball.c

libcore_la-volume-box.lo: volume-box.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-volume-box.lo -MD -MP -MF "$(DEPDIR)/libcore_la-volume-box.Tpo" -c -o libcore_la-volume-box.lo `test -f 'volume-box.c' || echo '$(srcdir)/'`volume-box.c; \
	then mv -f "$(DEPDIR)/libcore_la-volume-box.Tpo" "$(DEPDIR)/libcore_la-volume-box.Plo"; else rm -f "$(DEPDIR)/libcore_la-volume-box.Tpo"; exit 1; fi
#	source='volume-box.c' object='libcore_la-volume-box.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-volume-box.lo `test -f 'volume-box.c' || echo '$(srcdir)/'`volume-box.c

libcore_la-volume-cylinder.lo: volume-cylinder.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-volume-cylinder.lo -MD -MP -MF "$(DEPDIR)/libcore_la-volume-cylinder.Tpo" -c -o libcore_la-volume-cylinder.lo `test -f 'volume-cylinder.c' || echo '$(srcdir)/'`volume-cylinder.c; \
	then mv -f "$(DEPDIR)/libcore_la-volume-cylinder.Tpo" "$(DEPDIR)/libcore_la-volume-cylinder.Plo"; else rm -f "$(DEPDIR)/libcore_la-volume-cylinder.Tpo"; exit 1; fi
#	source='volume-cylinder.c' object='libcore_la-volume-cylinder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-volume-cylinder.lo `test -f 'volume-cylinder.c' || echo '$(srcdir)/'`volume-cylinder.c

libcore_la-curve.lo: curve.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-curve.lo -MD -MP -MF "$(DEPDIR)/libcore_la-curve.Tpo" -c -o libcore_la-curve.lo `test -f 'curve.c' || echo '$(srcdir)/'`curve.c; \
	then mv -f "$(DEPDIR)/libcore_la-curve.Tpo" "$(DEPDIR)/libcore_la-curve.Plo"; else rm -f "$(DEPDIR)/libcore_la-curve.Tpo"; exit 1; fi
#	source='curve.c' object='libcore_la-curve.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-curve.lo `test -f 'curve.c' || echo '$(srcdir)/'`curve.c

libcore_la-experiment.lo: experiment.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-experiment.lo -MD -MP -MF "$(DEPDIR)/libcore_la-experiment.Tpo" -c -o libcore_la-experiment.lo `test -f 'experiment.c' || echo '$(srcdir)/'`experiment.c; \
	then mv -f "$(DEPDIR)/libcore_la-experiment.Tpo" "$(DEPDIR)/libcore_la-experiment.Plo"; else rm -f "$(DEPDIR)/libcore_la-experiment.Tpo"; exit 1; fi
#	source='experiment.c' object='libcore_la-experiment.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-experiment.lo `test -f 'experiment.c' || echo '$(srcdir)/'`experiment.c

libcore_la-intersection.lo: intersection.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-intersection.lo -MD -MP -MF "$(DEPDIR)/libcore_la-intersection.Tpo" -c -o libcore_la-intersection.lo `test -f 'intersection.c' || echo '$(srcdir)/'`intersection.c; \
	then mv -f "$(DEPDIR)/libcore_la-intersection.Tpo" "$(DEPDIR)/libcore_la-intersection.Plo"; else rm -f "$(DEPDIR)/libcore_la-intersection.Tpo"; exit 1; fi
#	source='intersection.c' object='libcore_la-intersection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-intersection.lo `test -f 'intersection.c' || echo '$(srcdir)/'`intersection.c

libcore_la-part.lo: part.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-part.lo -MD -MP -MF "$(DEPDIR)/libcore_la-part.Tpo" -c -o libcore_la-part.lo `test -f 'part.c' || echo '$(srcdir)/'`part.c; \
	then mv -f "$(DEPDIR)/libcore_la-part.Tpo" "$(DEPDIR)/libcore_la-part.Plo"; else rm -f "$(DEPDIR)/libcore_la-part.Tpo"; exit 1; fi
#	source='part.c' object='libcore_la-part.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-part.lo `test -f 'part.c' || echo '$(srcdir)/'`part.c

libcore_la-ptype.lo: ptype.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-ptype.lo -MD -MP -MF "$(DEPDIR)/libcore_la-ptype.Tpo" -c -o libcore_la-ptype.lo `test -f 'ptype.c' || echo '$(srcdir)/'`ptype.c; \
	then mv -f "$(DEPDIR)/libcore_la-ptype.Tpo" "$(DEPDIR)/libcore_la-ptype.Plo"; else rm -f "$(DEPDIR)/libcore_la-ptype.Tpo"; exit 1; fi
#	source='ptype.c' object='libcore_la-ptype.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-ptype.lo `test -f 'ptype.c' || echo '$(srcdir)/'`ptype.c

libcore_la-run.lo: run.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-run.lo -MD -MP -MF "$(DEPDIR)/libcore_la-run.Tpo" -c -o libcore_la-run.lo `test -f 'run.c' || echo '$(srcdir)/'`run.c; \
	then mv -f "$(DEPDIR)/libcore_la-run.Tpo" "$(DEPDIR)/libcore_la-run.Plo"; else rm -f "$(DEPDIR)/libcore_la-run.Tpo"; exit 1; fi
#	source='run.c' object='libcore_la-run.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-run.lo `test -f 'run.c' || echo '$(srcdir)/'`run.c

libcore_la-track.lo: track.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-track.lo -MD -MP -MF "$(DEPDIR)/libcore_la-track.Tpo" -c -o libcore_la-track.lo `test -f 'track.c' || echo '$(srcdir)/'`track.c; \
	then mv -f "$(DEPDIR)/libcore_la-track.Tpo" "$(DEPDIR)/libcore_la-track.Plo"; else rm -f "$(DEPDIR)/libcore_la-track.Tpo"; exit 1; fi
#	source='track.c' object='libcore_la-track.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-track.lo `test -f 'track.c' || echo '$(srcdir)/'`track.c

libcore_la-vertex.lo: vertex.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-vertex.lo -MD -MP -MF "$(DEPDIR)/libcore_la-vertex.Tpo" -c -o libcore_la-vertex.lo `test -f 'vertex.c' || echo '$(srcdir)/'`vertex.c; \
	then mv -f "$(DEPDIR)/libcore_la-vertex.Tpo" "$(DEPDIR)/libcore_la-vertex.Plo"; else rm -f "$(DEPDIR)/libcore_la-vertex.Tpo"; exit 1; fi
#	source='vertex.c' object='libcore_la-vertex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-vertex.lo `test -f 'vertex.c' || echo '$(srcdir)/'`vertex.c

libcore_la-core.lo: core.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libcore_la-core.lo -MD -MP -MF "$(DEPDIR)/libcore_la-core.Tpo" -c -o libcore_la-core.lo `test -f 'core.c' || echo '$(srcdir)/'`core.c; \
	then mv -f "$(DEPDIR)/libcore_la-core.Tpo" "$(DEPDIR)/libcore_la-core.Plo"; else rm -f "$(DEPDIR)/libcore_la-core.Tpo"; exit 1; fi
#	source='core.c' object='libcore_la-core.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libcore_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libcore_la-core.lo `test -f 'core.c' || echo '$(srcdir)/'`core.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

vala-ccode: $(VALASOURCES); $(VALAC) $(VALAFLAGS) -C $^ $(VALAPKGS) && touch vala-ccode
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
